{
    "_type": "Events",
    "timestamp": "Tue Dec 14 16:19:40 2021",
    "implementer": "A",
    "cpu": "Neoverse E1",
    "architecture": "armv8.2-a",
    "pmu_architecture": "pmuv3",
    "counters": 6,
    "refs": [
        {
            "ref": "Neoverse E1 TRM",
            "public": true
        },
        {
            "ref": "gator events-Neoverse-E1.xml",
            "url": "https://raw.githubusercontent.com/ARM-software/gator/master/daemon/events-Neoverse-E1.xml",
            "public": true
        }
    ],
    "events": [
        {
            "code": 0,
            "refs": [
                1
            ],
            "name": "SW_INCR",
            "architectural": true,
            "type": "UEVT",
            "description": "The counter increments on writes to the PMSWINC register"
        },
        {
            "code": 1,
            "refs": [
                1
            ],
            "name": "L1I_CACHE_REFILL",
            "architectural": false,
            "type": "UEVT",
            "subtype": "REFILL",
            "component": "L1I",
            "description": "The counter counts each access counted by 'L1 Instruction Cache: Access' that causes a demand refill of any of the Level 1 caches outside the Level 1 caches of this PE. A refill includes any access that causes data to be fetched from outside the cache, even if the data is ultimately not allocated into the cache. For example, data might be fetched into a buffer but then discarded, rather than being allocated into a cache. These buffers are treated as part of the cache. If the cache is shared, only events attributable to this PE are counted. If the cache is not shared, all events are counted"
        },
        {
            "code": 2,
            "refs": [
                1
            ],
            "name": "L1I_TLB_REFILL",
            "architectural": false,
            "type": "UEVT",
            "component": "L1ITLB",
            "description": "The counter counts attributable instruction memory accesses that cause a TLB refill of at least the Level 1 instruction TLB. This includes each Instruction memory access that causes an access to a level of memory system due to a translation table walk or an access to another level of TLB caching"
        },
        {
            "code": 3,
            "refs": [
                1
            ],
            "name": "L1D_CACHE_REFILL",
            "architectural": false,
            "type": "UEVT",
            "subtype": "REFILL",
            "component": "L1D",
            "description": "The counter counts each access counted by 'L1 Data Cache: Access' that causes a demand refill of at least the Level 1 data or unified cache from outside the Level 1 cache. Each access to a cache line that causes a new linefill is counted, including those from instructions that generate multiple accesses, such as load or store multiples, and PUSH and POP instructions. In particular, the counter counts accesses to the Level 1 cache that cause a refill that is satisfied by another Level 1 data or unified cache, or a Level 2 cache, or memory. A refill includes any access that causes data to be fetched from outside the cache, even if the data is ultimately not allocated into the cache. For example, data might be fetched into a buffer but then discarded, rather than being allocated into a cache. These buffers are treated as part of the cache"
        },
        {
            "code": 4,
            "refs": [
                1
            ],
            "name": "L1D_CACHE",
            "architectural": false,
            "type": "UEVT",
            "subtype": "WRITE",
            "component": "L1D",
            "description": "The counter counts each memory read operation or memory write operation that causes a cache access to at least the Level 1 data or unified cache. If the cache is shared, only events attributable to this PE are counted. If the cache is not shared, all events are counted. Each access to a cache line is counted including the multiple accesses of instructions, such as LDM or STM . Each access to other Level 1 data or unified memory structures, for example refill buffers, write buffers, and write-back buffers, is also counted"
        },
        {
            "code": 5,
            "refs": [
                1
            ],
            "name": "L1D_TLB_REFILL",
            "architectural": false,
            "type": "UEVT",
            "component": "L1DTLB",
            "description": "The counter counts each attributable memory read operation or attributable memory write operation that causes a TLB refill of at least the Level 1 data or unified TLB. It counts each read or write that causes a refill, in the form of a translation table walk or an access to another level of TLB caching"
        },
        {
            "code": 6,
            "refs": [
                1
            ],
            "name": "LD_RETIRED",
            "architectural": true,
            "type": "INS",
            "description": "The counter increments for every executed memory-reading instruction"
        },
        {
            "code": 7,
            "refs": [
                1
            ],
            "name": "ST_RETIRED",
            "architectural": true,
            "type": "INS",
            "description": "The counter increments for every executed memory-writing instruction. DC ZVA is counted as a store. The counter does not increment for a Store-Exclusive instruction that fails"
        },
        {
            "code": 8,
            "refs": [
                1
            ],
            "name": "INST_RETIRED",
            "architectural": true,
            "type": "INS",
            "description": "The counter increments for every architecturally executed instruction"
        },
        {
            "code": 9,
            "refs": [
                1
            ],
            "name": "EXC_TAKEN",
            "architectural": true,
            "type": "EXC",
            "description": "The counter increments for each exception taken"
        },
        {
            "code": 10,
            "refs": [
                1
            ],
            "name": "EXC_RETURN",
            "architectural": true,
            "type": "EXC",
            "description": "The counter increments for each executed exception return instruction"
        },
        {
            "code": 11,
            "refs": [
                1
            ],
            "name": "CID_WRITE_RETIRED",
            "architectural": true,
            "type": "UEVT",
            "description": "The counter increments for every write to the CONTEXTIDR"
        },
        {
            "code": 12,
            "refs": [
                1
            ],
            "name": "PC_WRITE_RETIRED",
            "architectural": true,
            "type": "EXC",
            "description": "The counter increments for every software change of the PC. This includes all: Branch instructions, memory reading instructions that explicitly write to the PC, Data processing instructions that explicitly write to the PC, and Exception return instructions"
        },
        {
            "code": 13,
            "refs": [
                1
            ],
            "name": "BR_IMMED_RETIRED",
            "architectural": true,
            "type": "INS",
            "description": "The counter counts all immediate branch instructions that are architecturally executed"
        },
        {
            "code": 14,
            "refs": [
                1
            ],
            "name": "BR_RETURN_RETIRED",
            "architectural": true,
            "type": "INS",
            "description": "The counter counts all procedure return instructions that are architecturally executed"
        },
        {
            "code": 16,
            "refs": [
                1
            ],
            "name": "BR_MIS_PRED",
            "architectural": false,
            "type": "UEVT",
            "subtype": "MISPREDICT",
            "component": "BPU",
            "description": "The counter counts each correction to the predicted program flow that occurs because of a misprediction from, or no prediction from, the branch prediction resources and that relates to instructions that the branch prediction resources are capable of predicting"
        },
        {
            "code": 17,
            "refs": [
                1
            ],
            "name": "CPU_CYCLES",
            "architectural": false,
            "type": "CYCLE",
            "description": "The counter increments on every cycle"
        },
        {
            "code": 18,
            "refs": [
                1
            ],
            "name": "BR_PRED",
            "architectural": false,
            "type": "UEVT",
            "component": "BPU",
            "description": "The counter counts every branch or other change in the program flow that the branch prediction resources are capable of predicting"
        },
        {
            "code": 19,
            "refs": [
                1
            ],
            "name": "MEM_ACCESS",
            "architectural": false,
            "type": "UEVT",
            "subtype": "WRITE",
            "component": "L1D",
            "description": "The counter counts memory read operations and memory write operations that the PE made. The counter increments whether the access results in an access to a Level 1 data or unified cache, a Level 2 data or unified cache, or neither of these"
        },
        {
            "code": 20,
            "refs": [
                1
            ],
            "name": "L1I_CACHE",
            "architectural": false,
            "type": "UEVT",
            "subtype": "REFILL",
            "component": "L1I",
            "description": "The counter counts attributable instruction memory accesses that access at least the Level 1 instruction or unified cache. Each access to other Level 1 instruction memory structures, such as refill buffers, is also counted"
        },
        {
            "code": 21,
            "refs": [
                1
            ],
            "name": "L1D_CACHE_WB",
            "architectural": false,
            "type": "UEVT",
            "subtype": "WRITE",
            "component": "L1D",
            "description": "The counter counts every write-back of data from the Level 1 data or unified cache. The counter counts each write-back that causes data to be written from the Level 1 cache to outside of the Level 1 cache"
        },
        {
            "code": 22,
            "refs": [
                1
            ],
            "name": "L2D_CACHE",
            "architectural": false,
            "type": "UEVT",
            "subtype": "WRITE",
            "component": "L2",
            "description": "The counter counts each memory read operation or memory write operation that causes a cache access to at least the Level 2 data or unified cache. If the cache is shared, only events attributable to this PE are counted. If the cache is not shared, all events are counted"
        },
        {
            "code": 23,
            "refs": [
                1
            ],
            "name": "L2D_CACHE_REFILL",
            "architectural": false,
            "type": "UEVT",
            "subtype": "REFILL",
            "component": "L2",
            "description": "The counter counts each access counted by 'L2 Data Cache: Access' that causes a refill of any of the Level 1 or Level 2 caches from outside the Level 1 and Level 2 caches of the PE. A refill includes any access that causes data to be fetched from outside the cache, even if the data is ultimately not allocated into the cache. For example, data might be fetched into a buffer but then discarded, rather than being allocated into a cache. These buffers are treated as part of the cache"
        },
        {
            "code": 24,
            "refs": [
                1
            ],
            "name": "L2D_CACHE_WB",
            "architectural": false,
            "type": "UEVT",
            "subtype": "WRITE",
            "component": "L2",
            "description": "The counter counts every write-back of data from the Level 2 data or unified cache that occurs as a result of an operation by this PE. It counts each write-back that causes data to be written from the Level 2 cache to outside the Level 1 and Level 2 caches"
        },
        {
            "code": 25,
            "refs": [
                1
            ],
            "name": "BUS_ACCESS",
            "architectural": false,
            "type": "UEVT",
            "subtype": "WRITE",
            "component": "BUS",
            "description": "The counter counts memory read operations and memory write operations that access outside of the boundary of the PE and its closely-coupled caches. Where this boundary lies with respect to any implemented caches is IMPLEMENTATION DEFINED"
        },
        {
            "code": 26,
            "refs": [
                1
            ],
            "name": "MEMORY_ERROR",
            "architectural": false,
            "type": "UEVT",
            "description": "The counter counts every occurrence of a memory error signaled by a memory closely coupled to this PE. The definition of local memories is IMPLEMENTATION DEFINED but includes caches, tightly-coupled memories, and TLB arrays"
        },
        {
            "code": 27,
            "refs": [
                1
            ],
            "name": "INST_SPEC",
            "architectural": false,
            "type": "INS",
            "description": "The counter counts instructions that are speculatively executed by the PE. This includes instructions that are subsequently not architecturally executed"
        },
        {
            "code": 28,
            "refs": [
                1
            ],
            "name": "TTBR_WRITE_RETIRED",
            "architectural": true,
            "type": "UEVT",
            "description": "The counter counts writes to the translation table base registers, TTBR0 and TTBR1"
        },
        {
            "code": 29,
            "refs": [
                1
            ],
            "name": "BUS_CYCLES",
            "architectural": false,
            "type": "CYCLE",
            "component": "BUS",
            "description": "The counter increments on every cycle of the interface at the boundary of the PE and its closely-coupled caches. Where this boundary lies with respect to any implemented caches is IMPLEMENTATION DEFINED"
        },
        {
            "code": 31,
            "refs": [
                1
            ],
            "name": "L1D_CACHE_ALLOCATE",
            "architectural": false,
            "type": "UEVT",
            "subtype": "WRITE",
            "component": "L1D",
            "description": "The counter increments on every attributable write that writes an entire line into the Level 1 cache without fetching from outside the Level 1 cache"
        },
        {
            "code": 32,
            "refs": [
                1
            ],
            "name": "L2D_CACHE_ALLOCATE",
            "architectural": false,
            "type": "UEVT",
            "subtype": "WRITE",
            "component": "L2",
            "description": "The counter increments on every attributable write that writes an entire line into the Level 2 cache without fetching from outside the Level 1 or Level 2 caches"
        },
        {
            "code": 33,
            "refs": [
                1
            ],
            "name": "BR_RETIRED",
            "architectural": true,
            "type": "UEVT",
            "subtype": "MISPREDICT",
            "description": "The counter counts all branches on the architecturally executed path that would incur cost if mispredicted"
        },
        {
            "code": 34,
            "refs": [
                1
            ],
            "name": "BR_MIS_PRED_RETIRED",
            "architectural": false,
            "type": "UEVT",
            "component": "BPU",
            "description": "The counter counts all instructions counted by 'Instructions (Executed): Branch (Any)' that were not correctly predicted"
        },
        {
            "code": 35,
            "refs": [
                1
            ],
            "name": "STALL_FRONTEND",
            "architectural": false,
            "type": "CYCLE",
            "description": "The counter counts every cycle counted by the 'Cycles: CPU Cycles' event on which no operation was issued because there are no operations available to issue for this PE from the frontend"
        },
        {
            "code": 36,
            "refs": [
                1
            ],
            "name": "STALL_BACKEND",
            "architectural": false,
            "type": "CYCLE",
            "description": "The counter counts every cycle counted by the 'Cycles: CPU Cycles' event on which no operation was issued because either: The backend is unable to accept any of the operations available for issue for this PE, OR the backend is unable to accept any operations"
        },
        {
            "code": 37,
            "refs": [
                1
            ],
            "name": "L1D_TLB",
            "architectural": false,
            "type": "UEVT",
            "component": "L1DTLB",
            "description": "The counter counts each attributable memory read operation or attributable memory write operation that causes a TLB access to at least the Level 1 data or unified TLB. Each access to a TLB record is counted including the multiple accesses of instructions, such as LDM or STM"
        },
        {
            "code": 38,
            "refs": [
                1
            ],
            "name": "L1I_TLB",
            "architectural": false,
            "type": "UEVT",
            "component": "L1ITLB",
            "description": "The counter counts each attributable Instruction memory access that causes a TLB access to at least the Level 1 instruction or unified TLB"
        },
        {
            "code": 41,
            "refs": [
                1
            ],
            "name": "L3D_CACHE_ALLOCATE",
            "architectural": false,
            "type": "UEVT",
            "subtype": "WRITE",
            "component": "L3",
            "description": "The counter increments on every attributable write that writes an entire line into the Level 3 cache without fetching from outside the Level 1, Level 2, or Level 3 cache"
        },
        {
            "code": 42,
            "refs": [
                1
            ],
            "name": "L3D_CACHE_REFILL",
            "architectural": false,
            "type": "UEVT",
            "subtype": "REFILL",
            "component": "L3",
            "description": "The counter counts each access counted by 'L3 Data Cache: Access' which causes a demand refill of any of the Level 1, Level 2. or Level 3 caches from outside the Level 1, Level 2, and Level 3 caches. A refill includes any access that causes data to be fetched from outside the cache, even if the data is ultimately not allocated into the cache. For example, data might be fetched into a buffer but then discarded, rather than being allocated into a cache. These buffers are treated as part of the cache"
        },
        {
            "code": 43,
            "refs": [
                1
            ],
            "name": "L3D_CACHE",
            "architectural": false,
            "type": "UEVT",
            "subtype": "WRITE",
            "component": "L3",
            "description": "The counter counts each memory read operation or memory write operation that causes a cache access to at least the Level 3 data or unified cache. If the cache is shared, only events attributable to this PE are counted. If the cache is not shared, all events are counted. Each access to a cache line is counted including re fills of and write-backs from the Level 1 or Level 2 data, instruction, or unified caches. Each access to other Level 3 data or unified memory structures, such as refill buffers, write buffers, and write-back buffers, is also counted"
        },
        {
            "code": 45,
            "refs": [
                1
            ],
            "name": "L2D_TLB_REFILL",
            "architectural": false,
            "type": "UEVT",
            "component": "L2TLB",
            "description": "The counter counts each attributable memory read operation or attributable memory write operation that causes a TLB refill of at least the Level 2 data or unified TLB. It counts each attributable read or attributable write that causes a refill, in the form of a translation table walk or an access to another level of TLB caching"
        },
        {
            "code": 47,
            "refs": [
                1
            ],
            "name": "L2D_TLB",
            "architectural": false,
            "type": "UEVT",
            "component": "L2TLB",
            "description": "The counter counts each attributable memory read operation or attributable memory write operation that causes a TLB access to at least the Level 2 data or unified TLB. Each access to a TLB record is counted, including the multiple accesses of instructions such as LDM or STM"
        },
        {
            "code": 52,
            "refs": [
                1
            ],
            "name": "DTLB_WALK",
            "architectural": false,
            "type": "UEVT",
            "subtype": "WRITE",
            "description": "The counter counts each attributable memory read or memory write operation that causes a refill of a data or unified TLB involving at least one translation table walk access. This includes each complete or partial translation table walk that causes an access to memory, including to data or translation table walk caches"
        },
        {
            "code": 53,
            "refs": [
                1
            ],
            "name": "ITLB_WALK",
            "architectural": false,
            "type": "UEVT",
            "subtype": "REFILL",
            "description": "The counter counts each attributable Instruction memory access that causes a refill of an instruction TLB, involving at least one translation table walk access. This includes each complete or partial translation table walk that causes an access to memory, including to data or translation table walk caches"
        },
        {
            "code": 54,
            "refs": [
                1
            ],
            "name": "LL_CACHE_RD",
            "architectural": false,
            "type": "UEVT",
            "subtype": "READ",
            "description": "As 'Last Level Cache: Access', but counts only memory read accesses"
        },
        {
            "code": 55,
            "refs": [
                1
            ],
            "name": "LL_CACHE_MISS_RD",
            "architectural": false,
            "type": "UEVT",
            "subtype": "READ",
            "description": "As 'Last Level Cache: Miss', but counts only memory read operations"
        },
        {
            "code": 56,
            "refs": [
                1
            ],
            "name": "REMOTE_ACCESS_RD",
            "architectural": false,
            "type": "UEVT",
            "description": "As 'Multi-socket Remote Access: Access', but counts only memory read operations. "
        },
        {
            "code": 64,
            "refs": [
                1
            ],
            "name": "L1D_CACHE_RD",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "READ",
            "component": "L1D",
            "description": "As 'L1 Data Cache: Access', but counts only memory read accesses"
        },
        {
            "code": 65,
            "refs": [
                1
            ],
            "name": "L1D_CACHE_WR",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "WRITE",
            "component": "L1D",
            "description": "As 'L1 Data Cache: Access', but counts only memory write accesses"
        },
        {
            "code": 66,
            "refs": [
                1
            ],
            "name": "L1D_CACHE_REFILL_RD",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "READ",
            "component": "L1D",
            "description": "As 'L1 Data Cache: Refill', but counts only memory read accesses"
        },
        {
            "code": 67,
            "refs": [
                1
            ],
            "name": "L1D_CACHE_REFILL_WR",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "WRITE",
            "component": "L1D",
            "description": "As 'L1 Data Cache: Refill', but counts only memory write accesses"
        },
        {
            "code": 68,
            "refs": [
                1
            ],
            "name": "L1D_CACHE_REFILL_INNER",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "REFILL",
            "component": "L1D",
            "description": "As 'L1 Data Cache: Refill', but counts only memory operations that generate refills satisfied by transfer from another cache inside of the immediate cluster"
        },
        {
            "code": 69,
            "refs": [
                1
            ],
            "name": "L1D_CACHE_REFILL_OUTER",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "REFILL",
            "component": "L1D",
            "description": "As 'L1 Data Cache: Refill', but counts only memory operations that generate refills satisfied by transfer from another cache outside of the immediate cluster"
        },
        {
            "code": 80,
            "refs": [
                1
            ],
            "name": "L2D_CACHE_RD",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "READ",
            "component": "L2",
            "description": "As 'L2 Data Cache: Access', but counts only memory-read operations that access at least the Level 2 data or unified cache"
        },
        {
            "code": 81,
            "refs": [
                1
            ],
            "name": "L2D_CACHE_WR",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "WRITE",
            "component": "L2",
            "description": "As 'L2 Data Cache: Access', but counts only memory-write operations that access at least the Level 2 data or unified cache"
        },
        {
            "code": 82,
            "refs": [
                1
            ],
            "name": "L2D_CACHE_REFILL_RD",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "READ",
            "component": "L2",
            "description": "As 'L2 Data Cache: Refill', but counts only memory-read operations that cause a refill of at least the Level 2 data or unified cache"
        },
        {
            "code": 83,
            "refs": [
                1
            ],
            "name": "L2D_CACHE_REFILL_WR",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "WRITE",
            "component": "L2",
            "description": "As 'L2 Data Cache: Refill', but counts only memory-write operations that cause a refill of at least the Level 2 data or unified cache"
        },
        {
            "code": 96,
            "refs": [
                1
            ],
            "name": "BUS_ACCESS_RD",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "READ",
            "component": "BUS",
            "description": "As 'Bus: Access', but counts only memory-read operations that access outside the boundary of the PE and its closely-coupled caches"
        },
        {
            "code": 97,
            "refs": [
                1
            ],
            "name": "BUS_ACCESS_WR",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "WRITE",
            "component": "BUS",
            "description": "As 'Bus: Access', but counts only memory-write operations that access outside the boundary of the PE and its closely-coupled caches"
        },
        {
            "code": 102,
            "refs": [
                1
            ],
            "name": "MEM_ACCESS_RD",
            "recommended": true,
            "impdef": true,
            "type": "UEVT",
            "description": "As 'Memory: Access', but the counter counts only memory-read operations that the PE made"
        },
        {
            "code": 103,
            "refs": [
                1
            ],
            "name": "MEM_ACCESS_WR",
            "recommended": true,
            "impdef": true,
            "type": "UEVT",
            "description": "As 'Memory: Access', but the counter counts only memory-write operations that the PE made"
        },
        {
            "code": 104,
            "refs": [
                1
            ],
            "name": "UNALIGNED_LD_SPEC",
            "recommended": true,
            "impdef": true,
            "type": "UEVT",
            "description": "As 'Memory: Access', but the counter counts only unaligned memory-read operations that the PE made. It also counts unaligned accesses if they are subsequently changed into multiple aligned accesses"
        },
        {
            "code": 105,
            "refs": [
                1
            ],
            "name": "UNALIGNED_ST_SPEC",
            "recommended": true,
            "impdef": true,
            "type": "UEVT",
            "description": "As 'Memory: Access', but the counter counts only unaligned memory-write operations that the PE made. It also counts unaligned accesses if they are subsequently changed into multiple aligned accesses"
        },
        {
            "code": 106,
            "refs": [
                1
            ],
            "name": "UNALIGNED_LDST_SPEC",
            "recommended": true,
            "impdef": true,
            "type": "UEVT",
            "description": "As 'Memory: Access', but the counter counts only unaligned memory-read and unaligned memory-write operations that the PE made. It also counts unaligned accesses if they are subsequently changed into multiple aligned accesses"
        },
        {
            "code": 112,
            "refs": [
                1
            ],
            "name": "LD_SPEC",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "INS",
            "description": "As 'Instructions (Speculated): All', but the counter counts only memory-reading instructions, as defined by the 'Instructions (Executed): Load' event"
        },
        {
            "code": 113,
            "refs": [
                1
            ],
            "name": "ST_SPEC",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "INS",
            "description": "As 'Instructions (Speculated): All', but the counter counts only memory-writing instructions, as defined by the 'Instructions (Executed): Store' event"
        },
        {
            "code": 114,
            "refs": [
                1
            ],
            "name": "LDST_SPEC",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "INS",
            "description": "As 'Instructions (Speculated): All', but the counter counts only memory-reading and memory-writing instructions, as defined by the 'Instructions (Executed): Load' and 'Instructions (Executed): Store' events"
        },
        {
            "code": 115,
            "refs": [
                1
            ],
            "name": "DP_SPEC",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "INS",
            "description": "As 'Instructions (Speculated): All', but the counter counts only integer data-processing instructions"
        },
        {
            "code": 116,
            "refs": [
                1
            ],
            "name": "ASE_SPEC",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "INS",
            "description": "As 'Instructions (Speculated): All', but the counter counts only Advanced SIMD data-processing instructions"
        },
        {
            "code": 117,
            "refs": [
                1
            ],
            "name": "VFP_SPEC",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "INS",
            "description": "As 'Instructions (Speculated): All', but the counter counts only floating-point data-processing instructions"
        },
        {
            "code": 119,
            "refs": [
                1
            ],
            "name": "CRYPTO_SPEC",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "INS",
            "description": "As 'Instructions (Speculated): All', but the counter counts only Cryptographic instructions, except PMULL and VMULL"
        },
        {
            "code": 120,
            "refs": [
                1
            ],
            "name": "BR_IMMED_SPEC",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "INS",
            "description": "The counter counts immediate branch instructions speculatively executed"
        },
        {
            "code": 121,
            "refs": [
                1
            ],
            "name": "BR_RETURN_SPEC",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "INS",
            "description": "The counter counts procedure return instructions speculatively executed"
        },
        {
            "code": 122,
            "refs": [
                1
            ],
            "name": "BR_INDIRECT_SPEC",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "EXC",
            "description": "The counter counts indirect branch instructions speculatively executed. This includes software change of the PC other than exception-generating instructions and immediate branch instructions"
        },
        {
            "code": 124,
            "refs": [
                1
            ],
            "name": "ISB_SPEC",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "INS",
            "description": "The counter counts Instruction Synchronization Barrier instructions speculatively executed, including CP15ISB"
        },
        {
            "code": 134,
            "refs": [
                1
            ],
            "name": "EXC_IRQ",
            "recommended": true,
            "impdef": true,
            "type": "EXC",
            "description": "As 'Exceptions: Taken', but counts only those exceptions taken locally that are IRQ or Virtual IRQ exceptions"
        },
        {
            "code": 135,
            "refs": [
                1
            ],
            "name": "EXC_FIQ",
            "recommended": true,
            "impdef": true,
            "type": "EXC",
            "description": "As 'Exceptions: Taken', but counts only those exceptions taken locally that are FIQ or Virtual FIQ exceptions"
        },
        {
            "code": 160,
            "refs": [
                1
            ],
            "name": "L3D_CACHE_RD",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "READ",
            "component": "L3",
            "description": "As 'L3 Data Cache: Access', but counts only attributable memory-read operations that cause a cache access to at least the Level 3 data or unified cache"
        },
        {
            "code": 162,
            "refs": [
                1
            ],
            "name": "L3D_CACHE_REFILL_RD",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "READ",
            "component": "L3",
            "description": "As 'L3 Data Cache: Refill', but counts only attributable memory-read operations that cause a refill of at least the Level 3 data or unified cache from outside the Level 3 cache"
        },
        {
            "code": 192,
            "refs": [
                1
            ],
            "impdef": true,
            "type": "UEVT",
            "description": "Merge in the store buffer"
        },
        {
            "code": 193,
            "refs": [
                1
            ],
            "impdef": true,
            "type": "UEVT",
            "description": "External memory request"
        },
        {
            "code": 194,
            "refs": [
                1
            ],
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "description": "External memory request to non-cacheable memory"
        },
        {
            "code": 195,
            "refs": [
                1
            ],
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "REFILL",
            "component": "L1D",
            "description": "Level 1 data cache refill started due to prefetch. Counts any linefills from the prefetcher which cause an allocation into the L1 D-cache"
        },
        {
            "code": 196,
            "refs": [
                1
            ],
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "REFILL",
            "component": "L2",
            "description": "Level 2 cache refill due to prefetch. If the core is configured with a per-core L2 cache: This event does not count. If the core is configured without a per-core L2 cache: This event counts the cluster cache event, as defined by 'L3 Data Cache: Refill (due to prefetch)'. If there is neither a per-core cache nor a cluster cache configured, this event is not implemented"
        },
        {
            "code": 197,
            "refs": [
                1
            ],
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "REFILL",
            "component": "L2",
            "description": "Level 3 cache refill due to prefetch. This event counts any linefills from the hardware prefetcher which cause an allocation into the L3 cache. Note: It might not be possible to distinguish between both hardware and software prefetches and also which prefetches cause an allocation. If so, only hardware prefetches should be counted, regardless of whether they allocate.  If either the core is configured without a per-core L2 or the cluster is configured without an L3 cache, this event is not implemented"
        },
        {
            "code": 198,
            "refs": [
                1
            ],
            "impdef": true,
            "type": "UEVT",
            "component": "L1D",
            "description": "L1D entering write stream mode"
        },
        {
            "code": 199,
            "refs": [
                1
            ],
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "WRITE",
            "component": "L1D",
            "description": "Level 1 data cache write streaming mode"
        },
        {
            "code": 200,
            "refs": [
                1
            ],
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "WRITE",
            "component": "L2",
            "description": "Level 2 cache write streaming mode"
        },
        {
            "code": 201,
            "refs": [
                1
            ],
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "WRITE",
            "component": "L3",
            "description": "Level 3 cache write streaming mode"
        },
        {
            "code": 202,
            "refs": [
                1
            ],
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "ACCESS",
            "component": "L2TLB",
            "description": "Level 2 TLB last-level walk cache access. This event does not count if the MMU is disabled"
        },
        {
            "code": 203,
            "refs": [
                1
            ],
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "REFILL",
            "component": "L2TLB",
            "description": "Level 2 TLB last-level walk cache refill. This event does not count if the MMU is disabled"
        },
        {
            "code": 204,
            "refs": [
                1
            ],
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "ACCESS",
            "component": "L2TLB",
            "description": "Level 2 TLB level-2 walk cache access. This event counts accesses to the level-2 walk cache where the last-level walk cache has missed. The event only counts when the translation regime of the pagewalk uses level 2 descriptors. This event does not count if the MMU is disabled"
        },
        {
            "code": 205,
            "refs": [
                1
            ],
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "REFILL",
            "component": "L2TLB",
            "description": "Level 2 TLB level-2 walk cache refill. This event does not count if the MMU is disabled"
        },
        {
            "code": 206,
            "refs": [
                1
            ],
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "ACCESS",
            "component": "L2TLB",
            "description": "Level 2 TLB IPA cache access. This event counts on each access to the IPA cache. If a single pagewalk needs to make multiple accesses to the IPA cache, each access is counted. If stage 2 translation is disabled, this event does not count"
        },
        {
            "code": 207,
            "refs": [
                1
            ],
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "REFILL",
            "component": "L2TLB",
            "description": "Level 2 TLB IPA cache refill. This event counts on each refill of the IPA cache. If a single pagewalk needs to make multiple accesses to the IPA cache, each access which causes a refill is counted. If stage 2 translation is disabled, this event does not count"
        },
        {
            "code": 208,
            "refs": [
                1
            ],
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "ACCESS",
            "description": "I-Cache miss on an access from the prefetch block. "
        },
        {
            "code": 209,
            "refs": [
                1
            ],
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "component": "L2TLB",
            "description": "Counts the cycles spent on a request for Level 2 TLB lookup after a Level 1l ITLB miss"
        },
        {
            "code": 210,
            "refs": [
                1
            ],
            "impdef": true,
            "type": "UEVT",
            "subtype": "MISPREDICT",
            "component": "BPU",
            "description": "Micro-predictor conditional/direction mispredict, with respect to if3/if4 predictor. "
        },
        {
            "code": 211,
            "refs": [
                1
            ],
            "impdef": true,
            "type": "UEVT",
            "subtype": "MISPREDICT",
            "component": "BPU",
            "description": "Micro-predictor address mispredict, with respect to if3/if4 predictor. "
        },
        {
            "code": 212,
            "refs": [
                1
            ],
            "impdef": true,
            "type": "UEVT",
            "component": "BPU",
            "description": "Micro-predictor hit with immediate redirect"
        },
        {
            "code": 214,
            "refs": [
                1
            ],
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "component": "BPU",
            "description": "Micro-predictor negative cache hit"
        },
        {
            "code": 215,
            "refs": [
                1
            ],
            "impdef": true,
            "type": "UEVT",
            "component": "BPU",
            "description": "Micro-predictor correction"
        },
        {
            "code": 216,
            "refs": [
                1
            ],
            "impdef": true,
            "type": "INS",
            "description": "A 2nd instruction could have been pushed but was not because it was non-sequential"
        },
        {
            "code": 217,
            "refs": [
                1
            ],
            "impdef": true,
            "type": "UEVT",
            "component": "BPU",
            "description": "Micro-predictor miss. "
        },
        {
            "code": 218,
            "refs": [
                1
            ],
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "description": "Thread flushed due to TLB miss"
        },
        {
            "code": 219,
            "refs": [
                1
            ],
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "description": "Thread flushed due to reasons other than TLB miss"
        },
        {
            "code": 220,
            "refs": [
                1
            ],
            "impdef": true,
            "type": "UEVT",
            "description": "This thread and the other thread both ready for scheduling in if0"
        },
        {
            "code": 221,
            "refs": [
                1
            ],
            "impdef": true,
            "type": "UEVT",
            "description": "This thread was arbitrated when the other thread was also ready for scheduling"
        },
        {
            "code": 222,
            "refs": [
                1
            ],
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "READ",
            "description": "This thread was arbitrated when the other thread was also active, but not necessarily ready. For example, waiting for I-Cache or TLB"
        },
        {
            "code": 223,
            "refs": [
                1
            ],
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "READ",
            "description": "This thread was not arbitrated because it was not ready for scheduling. For example, due to a cache miss or TLB miss"
        },
        {
            "code": 224,
            "refs": [
                1
            ],
            "impdef": true,
            "type": "UEVT",
            "description": "The thread moved from an active state to an inactive state (long-term sleep state, causing deallocation of some resources). "
        },
        {
            "code": 225,
            "refs": [
                1
            ],
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "READ",
            "description": "I-Cache lookup under miss from other thread"
        },
        {
            "code": 226,
            "refs": [
                1
            ],
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "READ",
            "description": "I-Cache miss under miss from other thread"
        },
        {
            "code": 227,
            "refs": [
                1
            ],
            "impdef": true,
            "type": "INS",
            "description": "This thread pushed an instruction into the IQ"
        },
        {
            "code": 228,
            "refs": [
                1
            ],
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "description": "I-Cache Speculative line fill"
        },
        {
            "code": 232,
            "refs": [
                1
            ],
            "impdef": true,
            "type": "INS",
            "description": "Instruction retired, conditional branch"
        },
        {
            "code": 233,
            "refs": [
                1
            ],
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "MISPREDICT",
            "component": "BPU",
            "description": "Instruction retired, indirect branch, mispredicted"
        },
        {
            "code": 234,
            "refs": [
                1
            ],
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "MISPREDICT",
            "component": "BPU",
            "description": "Instruction retired, conditional branch, mispredicted"
        },
        {
            "code": 235,
            "refs": [
                1
            ],
            "impdef": true,
            "type": "UEVT",
            "description": "Memory error (any type) from IFU"
        },
        {
            "code": 236,
            "refs": [
                1
            ],
            "impdef": true,
            "type": "UEVT",
            "description": "Memory error (any type) from DCU"
        },
        {
            "code": 237,
            "refs": [
                1
            ],
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "description": "Memory error (any type) from TLB"
        },
        {
            "code": 240,
            "refs": [
                1
            ],
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "WRITE",
            "component": "L1D",
            "description": "Unattributable Level 1 data cache write-back. This event occurs when a requestor outside the PE makes a coherency request that results in write-back"
        },
        {
            "code": 241,
            "refs": [
                1
            ],
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "ACCESS",
            "component": "L2",
            "description": "Unattributable Level 2 data cache access. This event occurs when a requestor outside the PE makes a coherency request that results in level 2 data cache access"
        },
        {
            "code": 242,
            "refs": [
                1
            ],
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "READ",
            "component": "L2",
            "description": "Unattributable Level 2 data cache access, read. This event occurs when a requestor outside the PE makes a coherency request that results in level 2 data cache read access"
        },
        {
            "code": 243,
            "refs": [
                1
            ],
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "READ",
            "component": "L3",
            "description": "Unattributable Level 3 data cache access. This event occurs when a requestor outside the PE makes a coherency request that results in level 3 data cache read access"
        },
        {
            "code": 244,
            "refs": [
                1
            ],
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "READ",
            "component": "L3",
            "description": "Unattributable Level 3 data cache access, read. This event occurs when a requestor outside the PE makes a coherency request that results in level 3 data cache read access"
        },
        {
            "code": 245,
            "refs": [
                1
            ],
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "REFILL",
            "component": "L3",
            "description": "Unattributable Level 3 data or unified cache allocation without refill. This event occurs when a requestor outside the PE makes a coherency request that results in level 3 cache allocate without refill"
        },
        {
            "code": 246,
            "refs": [
                1
            ],
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "REFILL",
            "component": "L3",
            "description": "Unattributable Level 3 data or unified cache refill. This event occurs when a requestor outside the PE makes a coherency request that results in level 3 cache refill"
        },
        {
            "code": 247,
            "refs": [
                1
            ],
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "component": "L2",
            "description": "Level 2 cache stash dropped. This event counts on each stash request received from the interconnect or ACP, that is targeting L2 and gets dropped due to lack of buffer space to hold the request"
        },
        {
            "code": 16384,
            "refs": [
                0
            ],
            "name": "SAMPLE_POP",
            "architectural": false,
            "type": "UEVT",
            "description": "Sample Population"
        },
        {
            "code": 16385,
            "refs": [
                0
            ],
            "name": "SAMPLE_FEED",
            "architectural": false,
            "type": "UEVT",
            "description": "Sample Taken"
        },
        {
            "code": 16386,
            "refs": [
                0
            ],
            "name": "SAMPLE_FILTRATE",
            "architectural": false,
            "type": "UEVT",
            "description": "Sample Taken and not removed by filtering"
        },
        {
            "code": 16387,
            "refs": [
                0
            ],
            "name": "SAMPLE_COLLISION",
            "architectural": false,
            "type": "UEVT",
            "description": "Sample collided with previous sample"
        }
    ]
}