{
    "_type": "Events",
    "timestamp": "Thu Dec  2 15:42:32 2021",
    "implementer": "A",
    "cpu": "Cortex-A8",
    "architecture": "armv7-a",
    "pmu_architecture": "pmuv2",
    "counters": 4,
    "refs": [
        {
            "ref": "gator events-Cortex-A8.xml",
            "url": "https://raw.githubusercontent.com/ARM-software/gator/master/daemon/events-Cortex-A8.xml",
            "public": true
        }
    ],
    "events": [
        {
            "code": 0,
            "refs": [
                0
            ],
            "name": "SW_INCR",
            "architectural": true,
            "type": "UEVT",
            "description": "The counter increments on writes to the PMSWINC register"
        },
        {
            "code": 1,
            "refs": [
                0
            ],
            "name": "L1I_CACHE_REFILL",
            "architectural": false,
            "type": "UEVT",
            "subtype": "REFILL",
            "component": "L1I",
            "description": "The counter counts instruction memory accesses that cause a refill of at least the Level 1 instruction or unified cache. This includes each instruction memory access that causes a refill from outside the cache. It excludes accesses that do not cause a new cache refill but are satisfied from refilling data of a previous miss"
        },
        {
            "code": 2,
            "refs": [
                0
            ],
            "name": "L1I_TLB_REFILL",
            "architectural": false,
            "type": "UEVT",
            "component": "L1ITLB",
            "description": "The counter counts instruction memory accesses that cause a TLB refill of at least the Level 1 instruction TLB. This includes each instruction memory access that causes an access to a level of memory system due to a translation table walk or an access to another level of TLB caching"
        },
        {
            "code": 3,
            "refs": [
                0
            ],
            "name": "L1D_CACHE_REFILL",
            "architectural": false,
            "type": "UEVT",
            "subtype": "WRITE",
            "component": "L1D",
            "description": "The counter counts each memory-read operation or memory-write operation that causes a refill of at least the Level 1 data or unified cache from outside the Level 1 cache. Each access that causes a new linefill is counted, including those from instructions that generate multiple accesses, such as load or store multiples, and PUSH and POP instructions. In particular, the counter counts accesses to the Level 1 cache that cause a refill that is satisfied by another Level 1 data or unified cache, or a Level 2 cache, or memory"
        },
        {
            "code": 4,
            "refs": [
                0
            ],
            "name": "L1D_CACHE",
            "architectural": false,
            "type": "UEVT",
            "subtype": "WRITE",
            "component": "L1D",
            "description": "The counter counts each memory-read operation or memory-write operation that causes a cache access to at least the Level 1 data or unified cache. Each access to a cache line is counted including the multiple accesses of instructions, such as LDM or STM . Each access to other Level 1 data or unified memory structures, for example refill buffers, write buffers, and write- back buffers, is also counted"
        },
        {
            "code": 5,
            "refs": [
                0
            ],
            "name": "L1D_TLB_REFILL",
            "architectural": false,
            "type": "UEVT",
            "component": "L1DTLB",
            "description": "The counter counts each memory-read operation or memory-write operation that causes a TLB refill of at least the Level 1 data or unified TLB. It counts each read or write that causes a refill, in the form of a translation table walk or an access to another level of TLB caching"
        },
        {
            "code": 6,
            "refs": [
                0
            ],
            "name": "LD_RETIRED",
            "architectural": true,
            "type": "INS",
            "description": "The counter increments for every executed memory-reading instruction"
        },
        {
            "code": 7,
            "refs": [
                0
            ],
            "name": "ST_RETIRED",
            "architectural": true,
            "type": "INS",
            "description": "The counter increments for every executed memory-writing instruction, including SWP. The counter does not increment for a Store-Exclusive instruction that fails"
        },
        {
            "code": 8,
            "refs": [
                0
            ],
            "name": "INST_RETIRED",
            "architectural": true,
            "type": "INS",
            "description": "The counter increments for every architecturally executed instruction"
        },
        {
            "code": 9,
            "refs": [
                0
            ],
            "name": "EXC_TAKEN",
            "architectural": true,
            "type": "EXC",
            "description": "The counter increments for each exception taken.  The counter counts only the processor exceptions. It does not count untrapped floating-point exceptions or ThumbEE null checks and index checks"
        },
        {
            "code": 10,
            "refs": [
                0
            ],
            "name": "EXC_RETURN",
            "architectural": true,
            "type": "EXC",
            "description": "The counter increments for each executed exception return instruction"
        },
        {
            "code": 11,
            "refs": [
                0
            ],
            "name": "CID_WRITE_RETIRED",
            "architectural": true,
            "type": "UEVT",
            "description": "The counter increments for every write to the CONTEXTIDR"
        },
        {
            "code": 12,
            "refs": [
                0
            ],
            "name": "PC_WRITE_RETIRED",
            "architectural": true,
            "type": "EXC",
            "description": "The counter increments for every software change of the PC. This includes all: Branch instructions, memory reading instructions that explicitly write to the PC, Data processing instructions that explicitly write to the PC, and Exception return instructions"
        },
        {
            "code": 13,
            "refs": [
                0
            ],
            "name": "BR_IMMED_RETIRED",
            "architectural": true,
            "type": "INS",
            "description": "The counter counts all immediate branch instructions that are architecturally executed"
        },
        {
            "code": 14,
            "refs": [
                0
            ],
            "name": "BR_RETURN_RETIRED",
            "architectural": true,
            "type": "INS",
            "description": "The counter counts all procedure return instructions that are architecturally executed"
        },
        {
            "code": 15,
            "refs": [
                0
            ],
            "name": "UNALIGNED_LDST_RETIRED",
            "architectural": true,
            "type": "INS",
            "description": "The counter counts each memory-reading instruction or memory-writing instruction that accesses an unaligned address"
        },
        {
            "code": 16,
            "refs": [
                0
            ],
            "name": "BR_MIS_PRED",
            "architectural": false,
            "type": "UEVT",
            "subtype": "MISPREDICT",
            "component": "BPU",
            "description": "The counter counts each correction to the predicted program flow that occurs because of a misprediction from, or no prediction from, the branch prediction resources and that relates to instructions that the branch prediction resources are capable of predicting"
        },
        {
            "code": 18,
            "refs": [
                0
            ],
            "name": "BR_PRED",
            "architectural": false,
            "type": "UEVT",
            "component": "BPU",
            "description": "The counter counts every branch or other change in the program flow that the branch prediction resources are capable of predicting"
        },
        {
            "code": 64,
            "refs": [
                0
            ],
            "name": "L1D_CACHE_RD",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "CYCLE",
            "component": "L1D",
            "description": "Any write buffer full cycle"
        },
        {
            "code": 65,
            "refs": [
                0
            ],
            "name": "L1D_CACHE_WR",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "component": "L1D",
            "description": "Any store that is merged in the L2 memory system"
        },
        {
            "code": 66,
            "refs": [
                0
            ],
            "name": "L1D_CACHE_REFILL_RD",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "EVICT",
            "component": "L1D",
            "description": "Any bufferable store transaction from load/store to L2 cache, excluding eviction or cast out data"
        },
        {
            "code": 67,
            "refs": [
                0
            ],
            "name": "L1D_CACHE_REFILL_WR",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "ACCESS",
            "component": "L1D",
            "description": "Any accesses to the L2 cache"
        },
        {
            "code": 68,
            "refs": [
                0
            ],
            "name": "L1D_CACHE_REFILL_INNER",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "component": "L1D",
            "description": "Any cacheable miss in the L2 cache"
        },
        {
            "code": 69,
            "refs": [
                0
            ],
            "name": "L1D_CACHE_REFILL_OUTER",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "component": "L1D",
            "description": "The number of AXI read data transfers"
        },
        {
            "code": 70,
            "refs": [
                0
            ],
            "name": "L1D_CACHE_WB_VICTIM",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "component": "L1D",
            "description": "The number of AXI write data transfers"
        },
        {
            "code": 71,
            "refs": [
                0
            ],
            "name": "L1D_CACHE_WB_CLEAN",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "component": "L1D",
            "description": "Any replay event in the memory system"
        },
        {
            "code": 72,
            "refs": [
                0
            ],
            "name": "L1D_CACHE_INVAL",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "component": "L1D",
            "description": "Any unaligned memory access that results in a replay"
        },
        {
            "code": 73,
            "refs": [
                0
            ],
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "ACCESS",
            "component": "L1D",
            "description": "Any L1 data memory access that misses in the cache as a result of the hashing algorithm. The cases covered are: hash hit and physical address miss, hash hit and physical address hit in another way and hash miss and physical address hit"
        },
        {
            "code": 74,
            "refs": [
                0
            ],
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "ACCESS",
            "component": "L1I",
            "description": "Any L1 instruction memory access that misses in the cache as a result of the hashing algorithm. The cases covered are: hash hit and physical address miss, hash hit and physical address hit in another way and hash miss and physical address hit"
        },
        {
            "code": 75,
            "refs": [
                0
            ],
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "component": "L1D",
            "description": "Any L1 data memory access in which a page coloring alias occurs. alias = virtual address [12] ! = physical address [12]. This behavior results in a data memory eviction or cast out"
        },
        {
            "code": 76,
            "refs": [
                0
            ],
            "name": "L1D_TLB_REFILL_RD",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "ACCESS",
            "component": "L1DTLB",
            "description": "Any NEON access that hits in the L1 data cache"
        },
        {
            "code": 77,
            "refs": [
                0
            ],
            "name": "L1D_TLB_REFILL_WR",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "ACCESS",
            "component": "L1DTLB",
            "description": "Any NEON cacheable data accesses for L1 data cache"
        },
        {
            "code": 78,
            "refs": [
                0
            ],
            "name": "L1D_TLB_RD",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "ACCESS",
            "component": "L1DTLB",
            "description": "Any L2 cache accesses as a result of a NEON memory access"
        },
        {
            "code": 79,
            "refs": [
                0
            ],
            "name": "L1D_TLB_WR",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "component": "L1DTLB",
            "description": "Any NEON hit in the L2 cache"
        },
        {
            "code": 80,
            "refs": [
                0
            ],
            "name": "L2D_CACHE_RD",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "ACCESS",
            "component": "L2",
            "description": "Any L1 instruction cache access, excluding CP15 cache accesses"
        },
        {
            "code": 81,
            "refs": [
                0
            ],
            "name": "L2D_CACHE_WR",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "MISPREDICT",
            "component": "L2",
            "description": "Any return stack misprediction because of incorrect target address for a taken return stack pop"
        },
        {
            "code": 82,
            "refs": [
                0
            ],
            "name": "L2D_CACHE_REFILL_RD",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "MISPREDICT",
            "component": "L2",
            "description": "Two forms of branch direction misprediction: branch predicted taken, but was not taken and branch predicted not taken, but was taken"
        },
        {
            "code": 83,
            "refs": [
                0
            ],
            "name": "L2D_CACHE_REFILL_WR",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "component": "L2",
            "description": "Any predictable branch that is predicted to be taken"
        },
        {
            "code": 84,
            "refs": [
                0
            ],
            "impdef": true,
            "type": "UEVT",
            "component": "BPU",
            "description": "Any predictable branch that is executed and taken"
        },
        {
            "code": 85,
            "refs": [
                0
            ],
            "impdef": true,
            "architectural": false,
            "type": "INS",
            "description": "Number of operations issued, where an operation is either: an instruction or one operation in a sequence of operations that make up a multi-cycle instruction"
        },
        {
            "code": 86,
            "refs": [
                0
            ],
            "name": "L2D_CACHE_WB_VICTIM",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "INS",
            "component": "L2",
            "description": "Increment for every cycle that no instructions are available for issue"
        },
        {
            "code": 87,
            "refs": [
                0
            ],
            "name": "L2D_CACHE_WB_CLEAN",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "INS",
            "component": "L2",
            "description": "For every cycle, this event counts the number of instructions issued in that cycle. Multi-cycle instructions are only counted once"
        },
        {
            "code": 88,
            "refs": [
                0
            ],
            "name": "L2D_CACHE_INVAL",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "CYCLE",
            "component": "L2",
            "description": "Number of cycles the processor stalls waiting on MRC data from NEON"
        },
        {
            "code": 89,
            "refs": [
                0
            ],
            "impdef": true,
            "architectural": false,
            "type": "INS",
            "description": "Number of cycles that the processor stalls as a result of a full NEON instruction queue or NEON load queue"
        },
        {
            "code": 90,
            "refs": [
                0
            ],
            "impdef": true,
            "architectural": false,
            "type": "CYCLE",
            "description": "Number of cycles that NEON and integer processors are both not idle"
        },
        {
            "code": 112,
            "refs": [
                0
            ],
            "name": "LD_SPEC",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "description": "Counts any event from external input source PMUEXTIN[0]"
        },
        {
            "code": 113,
            "refs": [
                0
            ],
            "name": "ST_SPEC",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "description": "Counts any event from external input source PMUEXTIN[1]"
        },
        {
            "code": 114,
            "refs": [
                0
            ],
            "name": "LDST_SPEC",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "description": "Counts any event from both external input sources PMUEXTIN[0] and PMUEXTIN[1]"
        }
    ]
}