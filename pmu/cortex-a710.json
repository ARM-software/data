{
    "_type": "Events",
    "timestamp": "Thu Oct 13 14:14:44 2022",
    "implementer": "A",
    "cpuid": "0x41d47",
    "cpu": "Cortex-A710",
    "architecture": "armv9-a",
    "pmu_architecture": "pmuv3",
    "refs": [
        {
            "ref": "Cortex-A710 TRM",
            "public": true
        }
    ],
    "events": [
        {
            "code": 0,
            "refs": [
                0
            ],
            "name": "SW_INCR",
            "architectural": true,
            "type": "INS",
            "description": "Software increment This event counts any instruction architecturally executed (condition code check pass)"
        },
        {
            "code": 1,
            "refs": [
                0
            ],
            "name": "L1I_CACHE_REFILL",
            "architectural": false,
            "type": "UEVT",
            "subtype": "REFILL",
            "component": "L1I",
            "description": "L1 instruction cache refill This event counts any instruction fetch which misses in the cache. The following instructions are not counted: - Cache maintenance instructions - Non-cacheable accesses"
        },
        {
            "code": 2,
            "refs": [
                0
            ],
            "name": "L1I_TLB_REFILL",
            "architectural": false,
            "type": "UEVT",
            "subtype": "REFILL",
            "component": "L1ITLB",
            "description": "L1 instruction TLB refill This event counts any refill of the L1 instruction TLB from the MMU Translatton Cache (MMUTC). This includes refills that result in a translation fault. The following instructions are not counted: - TLB maintenance instructions This event counts regardless of whether the MMU is enabled"
        },
        {
            "code": 3,
            "refs": [
                0
            ],
            "name": "L1D_CACHE_REFILL",
            "architectural": false,
            "type": "UEVT",
            "subtype": "WRITE",
            "component": "L1D",
            "description": "L1 data cache refill This event counts any load or store operation or translation table walk access which causes data to be read from outside the L1, including accesses which do not allocate into L1. The following instructions are not counted: - Cache maintenance instructions and prefetches - Stores of an entire cache line, even if they make a coherency request outside the L1 - Partial cache line writes which do not allocate into the L1 cache. - Non-cacheable accesses This event counts the sum of L1D_CACHE_REFILL_RD and L1D_CACHE_REFILL_WR"
        },
        {
            "code": 4,
            "refs": [
                0
            ],
            "name": "L1D_CACHE",
            "architectural": false,
            "type": "UEVT",
            "subtype": "REFILL",
            "component": "L1D",
            "description": "L1 data cache access This event counts any load or store operation or translation table walk access which looks up in the L1 data cache. In particular, any access which could count the L1D_CACHE_REFILL event causes this event to count. The following instructions are not counted: - Cache maintenance instructions and prefetches - Non-cacheable accesses This event counts the sum of L1D_CACHE_RD and L1D_CACHE_WR"
        },
        {
            "code": 5,
            "refs": [
                0
            ],
            "name": "L1D_TLB_REFILL",
            "architectural": false,
            "type": "UEVT",
            "component": "L1DTLB",
            "description": "L1 data TLB refill This event counts any refill of the data L1 TLB from the MMUTC. This includes refills that result in a translation fault. TLB maintenance instructions are not counted. This event counts regardless of whether the MMU is enabled"
        },
        {
            "code": 8,
            "refs": [
                0
            ],
            "name": "INST_RETIRED",
            "architectural": true,
            "type": "INS",
            "description": "Instruction architecturally executed. This event counts all retired instructions, including those that fail their condition check"
        },
        {
            "code": 9,
            "refs": [
                0
            ],
            "name": "EXC_TAKEN",
            "type": "EXC",
            "description": "Exception taken"
        },
        {
            "code": 10,
            "refs": [
                0
            ],
            "name": "EXC_RETURN",
            "architectural": true,
            "type": "EXC",
            "description": "Instruction architecturally executed, condition code check pass, exception return"
        },
        {
            "code": 11,
            "refs": [
                0
            ],
            "name": "CID_WRITE_RETIRED",
            "architectural": true,
            "type": "INS",
            "description": "Instruction architecturally executed, condition code check pass, write to CONTEXTIDR This event only counts writes to CONTEXTIDR_EL1. Writes to CONTEXTIDR_EL12 and CONTEXTIDR_EL2 are not counted"
        },
        {
            "code": 16,
            "refs": [
                0
            ],
            "name": "BR_MIS_PRED",
            "architectural": false,
            "type": "UEVT",
            "subtype": "MISPREDICT",
            "component": "BPU",
            "description": "Mispredicted or not predicted branch speculatively executed This event counts any predictable branch instruction which is mispredicted either because of dynamic misprediction or because the MMU is off and the branches are statically predicted not taken"
        },
        {
            "code": 17,
            "refs": [
                0
            ],
            "name": "CPU_CYCLES",
            "architectural": false,
            "type": "CYCLE",
            "description": "Cycle"
        },
        {
            "code": 18,
            "refs": [
                0
            ],
            "name": "BR_PRED",
            "architectural": false,
            "type": "UEVT",
            "component": "BPU",
            "description": "Predictable branch speculatively executed. This event counts all predictable branches"
        },
        {
            "code": 19,
            "refs": [
                0
            ],
            "name": "MEM_ACCESS",
            "architectural": false,
            "type": "INS",
            "subtype": "ACCESS",
            "description": "Data memory access. This event counts memory accesses due to load or store instructions. The following instructions are not counted: - Instruction fetches - Cache maintenance instructions - Translation table walks or prefetches This event counts the sum of MEM_ACCESS_RD and MEM_ACCESS_WR"
        },
        {
            "code": 20,
            "refs": [
                0
            ],
            "name": "L1I_CACHE",
            "architectural": false,
            "type": "UEVT",
            "subtype": "ACCESS",
            "component": "L1I",
            "description": "L1 instruction cache access or Macro-op (MOP) cache access. This event counts any instruction fetch which accesses the L1 instruction cache or MOP cache. The following instructions are not counted: - Cache maintenance instructions - Non-cacheable accesses"
        },
        {
            "code": 21,
            "refs": [
                0
            ],
            "name": "L1D_CACHE_WB",
            "architectural": false,
            "type": "UEVT",
            "subtype": "WRITE",
            "component": "L1D",
            "description": "L1 data cache Write-Back This event counts any write-back of data from the L1 data cache to L2 or L3. This counts both victim line evictions and snoops, including cache maintenance operations. The following instructions are not counted: - Invalidations which do not result in data being transferred out of the L1 - Full-line writes which write to L2 without writing L1, such as write streaming mode"
        },
        {
            "code": 22,
            "refs": [
                0
            ],
            "name": "L2D_CACHE",
            "architectural": false,
            "type": "UEVT",
            "subtype": "WRITE",
            "component": "L2",
            "description": "L2 cache access This event counts any transaction from L1 which looks up in the L2 cache, and any write-back from the L1 to the L2. Snoops from outside the core and cache maintenance operations are not counted"
        },
        {
            "code": 23,
            "refs": [
                0
            ],
            "name": "L2D_CACHE_REFILL",
            "architectural": false,
            "type": "UEVT",
            "subtype": "READ",
            "component": "L2",
            "description": "L2 cache refill This event counts any cacheable transaction from L1 which causes data to be read from outside the core. L2 refills caused by stashes into L2 are not counted"
        },
        {
            "code": 24,
            "refs": [
                0
            ],
            "name": "L2D_CACHE_WB",
            "architectural": false,
            "type": "UEVT",
            "subtype": "WRITE",
            "component": "L2",
            "description": "L2 cache write-back This event counts any write-back of data from the L2 cache to outside the core. This includes snoops to the L2 which return data, regardless of whether they cause an invalidation. Invalidations from the L2 which do not write data outside of the core and snoops which return data from the L1 are not counted"
        },
        {
            "code": 25,
            "refs": [
                0
            ],
            "name": "BUS_ACCESS",
            "architectural": false,
            "type": "UEVT",
            "component": "BUS",
            "description": "Bus access This event counts for every beat of data transferred over the data channels between the core and the Snoop Control Unit (SCU). If both read and write data beats are transferred on a given cycle, this event is counted twice on that cycle. This event counts the sum of BUS_ACCESS_RD, BUS_ACCESS_WR, and any snoop data responses"
        },
        {
            "code": 26,
            "refs": [
                0
            ],
            "name": "MEMORY_ERROR",
            "type": "UEVT",
            "description": "Local memory error This event counts any correctable or uncorrectable memory error (ECC or parity) in the protected core RAMs"
        },
        {
            "code": 27,
            "refs": [
                0
            ],
            "name": "INST_SPEC",
            "architectural": false,
            "type": "UEVT",
            "description": "Operation speculatively executed"
        },
        {
            "code": 28,
            "refs": [
                0
            ],
            "name": "TTBR_WRITE_RETIRED",
            "architectural": true,
            "type": "INS",
            "description": "Instruction architecturally executed, condition code check pass, write to TTBR This event only counts writes to TTBR0_EL1/ TTBR1_EL1. Accesses to TTBR0_EL12/TTBR1_EL12 or TTBR0_EL2/TTBR1_EL2 are not counted"
        },
        {
            "code": 29,
            "refs": [
                0
            ],
            "trm_name": "BUS_MASTER_CYCLE",
            "name": "BUS_CYCLES",
            "architectural": false,
            "type": "UEVT",
            "component": "BUS",
            "description": "Bus cycles This event duplicates CPU_CYCLES"
        },
        {
            "code": 30,
            "refs": [
                0
            ],
            "trm_name": "COUNTER_OVERFLOW",
            "name": "CHAIN",
            "for_driver": true,
            "type": "UEVT",
            "description": "For odd-numbered counters, this event increments the count by one for each overflow of the preceding even-numbered counter. For evennumbered counters, there is no increment"
        },
        {
            "code": 32,
            "refs": [
                0
            ],
            "trm_name": "CACHE_ALLOCATE",
            "name": "L2D_CACHE_ALLOCATE",
            "architectural": false,
            "type": "UEVT",
            "subtype": "WRITE",
            "component": "L2",
            "description": "L2 data cache allocation without refill. This event counts any full cache line write into the L2 cache which does not cause a linefill, including write-backs from L1 to L2 and full-line writes which do not allocate into L1"
        },
        {
            "code": 33,
            "refs": [
                0
            ],
            "name": "BR_RETIRED",
            "architectural": true,
            "type": "EXC",
            "description": "Instruction architecturally executed, branch This event counts all branches, taken or not. This excludes exception entries, debug entries and CCFAIL branches"
        },
        {
            "code": 34,
            "refs": [
                0
            ],
            "name": "BR_MIS_PRED_RETIRED",
            "architectural": false,
            "type": "UEVT",
            "subtype": "MISPREDICT",
            "component": "BPU",
            "description": "Instruction architecturally executed, mispredicted branch This event counts any branch counted by BR_RETIRED which is not correctly predicted and causes a pipeline flush"
        },
        {
            "code": 35,
            "refs": [
                0
            ],
            "name": "STALL_FRONTEND",
            "architectural": false,
            "type": "CYCLE",
            "description": "No operation issued because of the frontend The counter counts on any cycle when there are no fetched instructions available to dispatch"
        },
        {
            "code": 36,
            "refs": [
                0
            ],
            "name": "STALL_BACKEND",
            "architectural": false,
            "type": "CYCLE",
            "description": "No operation issued because of the backend The counter counts on any cycle fetched instructions are not dispatched due to resource constraints"
        },
        {
            "code": 37,
            "refs": [
                0
            ],
            "name": "L1D_TLB",
            "architectural": false,
            "type": "UEVT",
            "component": "L1DTLB",
            "description": "Level 1 data TLB access This event counts any load or store operation which accesses the data L1 TLB. If both a load and a store are executed on a cycle, this event counts twice. This event counts regardless of whether the MMU is enabled"
        },
        {
            "code": 38,
            "refs": [
                0
            ],
            "name": "L1I_TLB",
            "architectural": false,
            "type": "UEVT",
            "component": "L1ITLB",
            "description": "Level 1 instruction TLB access This event counts any instruction fetch which accesses the instruction L1 TLB. This event counts regardless of whether the MMU is enabled"
        },
        {
            "code": 41,
            "refs": [
                0
            ],
            "name": "L3D_CACHE_ALLOCATE",
            "architectural": false,
            "type": "UEVT",
            "subtype": "WRITE",
            "component": "L3",
            "description": "Attributable L3 cache allocation without refill This event counts any full cache line write into the L3 cache which does not cause a linefill, including write-backs from L2 to L3 and full-line writes which do not allocate into L2"
        },
        {
            "code": 42,
            "refs": [
                0
            ],
            "name": "L3D_CACHE_REFILL",
            "architectural": false,
            "type": "UEVT",
            "subtype": "READ",
            "component": "L3",
            "description": "Attributable L3 cache refill This event counts for any cacheable read transaction returning data from the SCU for which the data source was outside the cluster. Transactions such as ReadUnique are counted as read transactions, even though they can be generated by store instructions"
        },
        {
            "code": 43,
            "refs": [
                0
            ],
            "name": "L3D_CACHE",
            "architectural": false,
            "type": "UEVT",
            "subtype": "WRITE",
            "component": "L3",
            "description": "Attributable L3 cache access This event counts for any cacheable read transaction returning data from the SCU, or for any cacheable write to the SCU"
        },
        {
            "code": 45,
            "refs": [
                0
            ],
            "trm_name": "L2TLB_REFILL",
            "name": "L2D_TLB_REFILL",
            "architectural": false,
            "type": "UEVT",
            "component": "L2TLB",
            "description": "Attributable L2 TLB refill This event counts on any refill of the MMUTC, caused by either an instruction or data access. This event does not count if the MMU is disabled"
        },
        {
            "code": 47,
            "refs": [
                0
            ],
            "trm_name": "L2TLB_REQ",
            "name": "L2D_TLB",
            "architectural": false,
            "type": "UEVT",
            "component": "L2TLB",
            "description": "Attributable L2 TLB access This event counts on any access to the MMUTC (caused by a refill of any of the L1 TLBs). This event does not count if the MMU is disabled"
        },
        {
            "code": 49,
            "refs": [
                0
            ],
            "name": "REMOTE_ACCESS",
            "type": "UEVT",
            "description": "Access to another socket in a multi-socket system"
        },
        {
            "code": 52,
            "refs": [
                0
            ],
            "trm_name": "DTLB_WLK",
            "name": "DTLB_WALK",
            "architectural": false,
            "type": "UEVT",
            "component": "L2TLB",
            "description": "Access to data TLB that caused a page table walk This event counts on any data access which causes L2D_TLB_REFILL to count"
        },
        {
            "code": 53,
            "refs": [
                0
            ],
            "trm_name": "ITLB_WLK",
            "name": "ITLB_WALK",
            "architectural": false,
            "type": "UEVT",
            "component": "L2TLB",
            "description": "Access to instruction TLB that caused a translation table walk. This event counts on any instruction access which causes L2D_TLB_REFILL to count"
        },
        {
            "code": 54,
            "refs": [
                0
            ],
            "name": "LL_CACHE_RD",
            "architectural": false,
            "type": "UEVT",
            "subtype": "READ",
            "component": "L1D",
            "description": "Last level cache access, read If CPUECTLR.EXTLLC is set, then this event counts any cacheable read transaction which returns a data source of interconnect cache. If CPUECTLR.EXTLLC is not set, then this event is a duplicate of the L*D_CACHE_RD event corresponding to the last level of cache implemented L2D_CACHE_RD if only one is implemented, or L1D_CACHE_RD if neither is implemented"
        },
        {
            "code": 55,
            "refs": [
                0
            ],
            "name": "LL_CACHE_MISS_RD",
            "architectural": false,
            "type": "UEVT",
            "subtype": "READ",
            "component": "L1D",
            "description": "Last level cache miss, read If CPUECTLR.EXTLLC is set, then this event counts any cacheable read transaction which returns a data source of DRAM, remote, or intercluster peer. If CPUECTLR.EXTLLC is not set, then this event is a duplicate of the L*D_CACHE_REFILL_RD event corresponding to the last level of cache implemented L2D_CACHE_REFILL_RD if only one is implemented, or L1D_CACHE_REFILL_RD if neither is implemented"
        },
        {
            "code": 57,
            "refs": [
                0
            ],
            "name": "L1D_CACHE_LMISS_RD",
            "architectural": false,
            "type": "UEVT",
            "component": "L1D",
            "description": "Level 1 data cache long-latency miss"
        },
        {
            "code": 58,
            "refs": [
                0
            ],
            "name": "OP_RETIRED",
            "architectural": false,
            "type": "UEVT",
            "description": "Micro-operation architecturally executed"
        },
        {
            "code": 59,
            "refs": [
                0
            ],
            "name": "OP_SPEC",
            "architectural": false,
            "type": "UEVT",
            "description": "Micro-operation speculatively executed"
        },
        {
            "code": 60,
            "refs": [
                0
            ],
            "name": "STALL",
            "type": "UEVT",
            "description": "No operation sent for execution"
        },
        {
            "code": 61,
            "refs": [
                0
            ],
            "name": "STALL_SLOT_BACKEND",
            "type": "CYCLE",
            "description": "No operation sent for execution on a slot due to the backend"
        },
        {
            "code": 62,
            "refs": [
                0
            ],
            "name": "STALL_SLOT_FRONTEND",
            "type": "CYCLE",
            "description": "No operation sent for execution on a slot due to the frontend"
        },
        {
            "code": 63,
            "refs": [
                0
            ],
            "name": "STALL_SLOT",
            "type": "CYCLE",
            "description": "No operation sent for execution on a slot"
        },
        {
            "code": 64,
            "refs": [
                0
            ],
            "name": "L1D_CACHE_RD",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "READ",
            "component": "L1D",
            "description": "L1 data cache access, read This event counts any load operation or page table walk access which looks up in the L1 data cache. In particular, any access which could count the L1D_CACHE_REFILL_RD event causes this event to count. The following instructions are not counted: - Cache maintenance instructions and prefetches - Non-cacheable accesses"
        },
        {
            "code": 65,
            "refs": [
                0
            ],
            "name": "L1D_CACHE_WR",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "WRITE",
            "component": "L1D",
            "description": "L1 data cache access, write This event counts any store operation which looks up in the L1 data cache. In particular, any access which could count the L1D_CACHE_REFILL_WR event causes this event to count. The following instructions are not counted: - Cache maintenance instructions and prefetches - Non-cacheable accesses"
        },
        {
            "code": 66,
            "refs": [
                0
            ],
            "name": "L1D_CACHE_REFILL_RD",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "READ",
            "component": "L1D",
            "description": "L1 data cache refill, read This event counts any load operation or page table walk access which causes data to be read from outside the L1, including accesses which do not allocate into L1. The following instructions are not counted: - Cache maintenance instructions and prefetches - Non-cacheable accesses"
        },
        {
            "code": 67,
            "refs": [
                0
            ],
            "name": "L1D_CACHE_REFILL_WR",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "WRITE",
            "component": "L1D",
            "description": "L1 data cache refill, write This event counts any store operation which causes data to be read from outside the L1, including accesses which do not allocate into L1. The following instructions are not counted: - Cache maintenance instructions and prefetches - Stores of an entire cache line, even if they make a coherency request outside the L1 - Partial cache line writes which do not allocate into the L1 cache. - Non-cacheable accesses"
        },
        {
            "code": 68,
            "refs": [
                0
            ],
            "name": "L1D_CACHE_REFILL_INNER",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "REFILL",
            "component": "L1D",
            "description": "L1 data cache refill, inner This event counts any L1 data cache linefill (as counted by L1D_CACHE_REFILL) which hits in the L2 cache, system L3 cache, or another core in the cluster"
        },
        {
            "code": 69,
            "refs": [
                0
            ],
            "name": "L1D_CACHE_REFILL_OUTER",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "REFILL",
            "component": "L1D",
            "description": "L1 data cache refill, outer This event counts any L1 data cache linefill (as counted by L1D_CACHE_REFILL) which does not hit in the L2 cache, system L3 cache, or another core in the cluster, and instead obtains data from outside the cluster"
        },
        {
            "code": 70,
            "refs": [
                0
            ],
            "name": "L1D_CACHE_WB_VICTIM",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "WRITE",
            "component": "L1D",
            "description": "L1 data cache write-back, victim"
        },
        {
            "code": 71,
            "refs": [
                0
            ],
            "name": "L1D_CACHE_WB_CLEAN",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "WRITE",
            "component": "L1D",
            "description": "L1 data cache write-back cleaning and coherency"
        },
        {
            "code": 72,
            "refs": [
                0
            ],
            "name": "L1D_CACHE_INVAL",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "component": "L1D",
            "description": "L1 data cache invalidate"
        },
        {
            "code": 76,
            "refs": [
                0
            ],
            "name": "L1D_TLB_REFILL_RD",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "component": "L1DTLB",
            "description": "L1 data TLB refill, read"
        },
        {
            "code": 77,
            "refs": [
                0
            ],
            "name": "L1D_TLB_REFILL_WR",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "component": "L1DTLB",
            "description": "L1 data TLB refill, write"
        },
        {
            "code": 78,
            "refs": [
                0
            ],
            "name": "L1D_TLB_RD",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "component": "L1DTLB",
            "description": "L1 data TLB access, read"
        },
        {
            "code": 79,
            "refs": [
                0
            ],
            "name": "L1D_TLB_WR",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "component": "L1DTLB",
            "description": "L1 data TLB access, write"
        },
        {
            "code": 80,
            "refs": [
                0
            ],
            "trm_name": "CACHE_ACCESS_RD",
            "name": "L2D_CACHE_RD",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "READ",
            "component": "L2",
            "description": "L2 cache access, read This event counts any read transaction from L1 which looks up in the L2 cache. Snoops from outside the core are not counted"
        },
        {
            "code": 81,
            "refs": [
                0
            ],
            "trm_name": "CACHE_ACCESS_WR",
            "name": "L2D_CACHE_WR",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "WRITE",
            "component": "L2",
            "description": "L2 cache access, write This event counts any write transaction from L1 which looks up in the L2 cache or any write-back from L1 which allocates into the L2 cache. Snoops from outside the core are not counted"
        },
        {
            "code": 82,
            "refs": [
                0
            ],
            "trm_name": "CACHE_RD_REFILL",
            "name": "L2D_CACHE_REFILL_RD",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "READ",
            "component": "L2",
            "description": "L2 cache refill, read This event counts any cacheable read transaction from L1 which causes data to be read from outside the core. L2 refills caused by stashes into L2 should not be counted. Transactions such as ReadUnique are counted as read transactions, even though they can be generated by store instructions"
        },
        {
            "code": 83,
            "refs": [
                0
            ],
            "trm_name": "CACHE_WR_REFILL",
            "name": "L2D_CACHE_REFILL_WR",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "WRITE",
            "component": "L2",
            "description": "L2 cache refill, write This event counts any write transaction from L1 which causes data to be read from outside the core. L2 refills caused by stashes into L2 should not be counted. Transactions such as ReadUnique are not counted as write transactions"
        },
        {
            "code": 86,
            "refs": [
                0
            ],
            "trm_name": "CACHE_WRITEBACK_VICTIM",
            "name": "L2D_CACHE_WB_VICTIM",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "WRITE",
            "component": "L2",
            "description": "L2 cache write-back, victim"
        },
        {
            "code": 87,
            "refs": [
                0
            ],
            "trm_name": "CACHE_WRITEBACK_CLEAN_COH",
            "name": "L2D_CACHE_WB_CLEAN",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "WRITE",
            "component": "L2",
            "description": "L2 cache write-back, cleaning and coherency"
        },
        {
            "code": 88,
            "refs": [
                0
            ],
            "trm_name": "L2CACHE_INV",
            "name": "L2D_CACHE_INVAL",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "component": "L2",
            "description": "L2 cache invalidate"
        },
        {
            "code": 92,
            "refs": [
                0
            ],
            "trm_name": "L2TLB_RD_REFILL",
            "name": "L2D_TLB_REFILL_RD",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "component": "L2TLB",
            "description": "L2 TLB refill, read"
        },
        {
            "code": 93,
            "refs": [
                0
            ],
            "trm_name": "L2TLB_WR_REFILL",
            "name": "L2D_TLB_REFILL_WR",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "component": "L2TLB",
            "description": "L2 TLB refill, write"
        },
        {
            "code": 94,
            "refs": [
                0
            ],
            "trm_name": "L2TLB_RD_REQ",
            "name": "L2D_TLB_RD",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "component": "L2TLB",
            "description": "L2 TLB access, read"
        },
        {
            "code": 95,
            "refs": [
                0
            ],
            "trm_name": "L2TLB_WR_REQ",
            "name": "L2D_TLB_WR",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "component": "L2TLB",
            "description": "L2 TLB access, write"
        },
        {
            "code": 96,
            "refs": [
                0
            ],
            "name": "BUS_ACCESS_RD",
            "recommended": true,
            "impdef": true,
            "type": "UEVT",
            "component": "BUS",
            "description": "Bus access read This event counts for every beat of data transferred over the read data channel between the core and the SCU"
        },
        {
            "code": 97,
            "refs": [
                0
            ],
            "name": "BUS_ACCESS_WR",
            "recommended": true,
            "impdef": true,
            "type": "UEVT",
            "component": "BUS",
            "description": "Bus access write This event counts for every beat of data transferred over the write data channel between the core and the SCU"
        },
        {
            "code": 102,
            "refs": [
                0
            ],
            "name": "MEM_ACCESS_RD",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "INS",
            "subtype": "READ",
            "description": "Data memory access, read This event counts memory accesses due to load instructions. The following instructions are not counted: - Instruction fetches - Cache maintenance instructions - Translation table walks - Prefetches"
        },
        {
            "code": 103,
            "refs": [
                0
            ],
            "name": "MEM_ACCESS_WR",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "INS",
            "subtype": "WRITE",
            "description": "Data memory access, write This event counts memory accesses due to store instructions. The following instructions are not counted: - Instruction fetches. - Cache maintenance instructions - Translation table walks - Prefetches"
        },
        {
            "code": 104,
            "refs": [
                0
            ],
            "name": "UNALIGNED_LD_SPEC",
            "recommended": true,
            "impdef": true,
            "type": "UEVT",
            "description": "Unaligned access, read"
        },
        {
            "code": 105,
            "refs": [
                0
            ],
            "name": "UNALIGNED_ST_SPEC",
            "recommended": true,
            "impdef": true,
            "type": "UEVT",
            "description": "Unaligned access, write"
        },
        {
            "code": 106,
            "refs": [
                0
            ],
            "name": "UNALIGNED_LDST_SPEC",
            "recommended": true,
            "impdef": true,
            "type": "UEVT",
            "description": "Unaligned access"
        },
        {
            "code": 108,
            "refs": [
                0
            ],
            "name": "LDREX_SPEC",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "description": "Exclusive operation speculatively executed, LDREX or LDX"
        },
        {
            "code": 109,
            "refs": [
                0
            ],
            "name": "STREX_PASS_SPEC",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "description": "Exclusive operation speculatively executed, STREX or STX pass"
        },
        {
            "code": 110,
            "refs": [
                0
            ],
            "name": "STREX_FAIL_SPEC",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "description": "Exclusive operation speculatively executed, STREX or STX fail"
        },
        {
            "code": 111,
            "refs": [
                0
            ],
            "name": "STREX_SPEC",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "description": "Exclusive operation speculatively executed, STREX or STX"
        },
        {
            "code": 112,
            "refs": [
                0
            ],
            "name": "LD_SPEC",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "description": "Operation speculatively executed, load"
        },
        {
            "code": 113,
            "refs": [
                0
            ],
            "name": "ST_SPEC",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "description": "Operation speculatively executed, store"
        },
        {
            "code": 115,
            "refs": [
                0
            ],
            "name": "DP_SPEC",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "description": "Operation speculatively executed, integer dataprocessing"
        },
        {
            "code": 116,
            "refs": [
                0
            ],
            "name": "ASE_SPEC",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "INS",
            "description": "Operation speculatively executed, Advanced SIMD instruction"
        },
        {
            "code": 117,
            "refs": [
                0
            ],
            "name": "VFP_SPEC",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "INS",
            "description": "Operation speculatively executed, floating-point instruction"
        },
        {
            "code": 118,
            "refs": [
                0
            ],
            "name": "PC_WRITE_SPEC",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "description": "Operation speculatively executed, software change of the PC"
        },
        {
            "code": 119,
            "refs": [
                0
            ],
            "name": "CRYPTO_SPEC",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "INS",
            "description": "Operation speculatively executed, Cryptographic instruction"
        },
        {
            "code": 120,
            "refs": [
                0
            ],
            "name": "BR_IMMED_SPEC",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "description": "Branch speculatively executed, immediate branch"
        },
        {
            "code": 121,
            "refs": [
                0
            ],
            "name": "BR_RETURN_SPEC",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "description": "Branch speculatively executed, procedure return"
        },
        {
            "code": 122,
            "refs": [
                0
            ],
            "name": "BR_INDIRECT_SPEC",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "description": "Branch speculatively executed, indirect branch"
        },
        {
            "code": 124,
            "refs": [
                0
            ],
            "name": "ISB_SPEC",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "description": "Barrier speculatively executed, ISB"
        },
        {
            "code": 125,
            "refs": [
                0
            ],
            "name": "DSB_SPEC",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "description": "Barrier speculatively executed, DSB"
        },
        {
            "code": 126,
            "refs": [
                0
            ],
            "name": "DMB_SPEC",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "description": "Barrier speculatively executed, DMB"
        },
        {
            "code": 129,
            "refs": [
                0
            ],
            "name": "EXC_UNDEF",
            "recommended": true,
            "impdef": true,
            "type": "EXC",
            "description": "Counts the number of undefined exceptions taken locally"
        },
        {
            "code": 130,
            "refs": [
                0
            ],
            "name": "EXC_SVC",
            "recommended": true,
            "impdef": true,
            "type": "EXC",
            "description": "Exception taken locally, Supervisor Call"
        },
        {
            "code": 131,
            "refs": [
                0
            ],
            "name": "EXC_PABORT",
            "recommended": true,
            "impdef": true,
            "type": "EXC",
            "description": "Exception taken locally, Instruction Abort"
        },
        {
            "code": 132,
            "refs": [
                0
            ],
            "name": "EXC_DABORT",
            "recommended": true,
            "impdef": true,
            "type": "EXC",
            "description": "Exception taken locally, Data Abort and SError"
        },
        {
            "code": 134,
            "refs": [
                0
            ],
            "name": "EXC_IRQ",
            "recommended": true,
            "impdef": true,
            "type": "EXC",
            "description": "Exception taken locally, IRQ"
        },
        {
            "code": 135,
            "refs": [
                0
            ],
            "name": "EXC_FIQ",
            "recommended": true,
            "impdef": true,
            "type": "EXC",
            "description": "Exception taken locally, FIQ"
        },
        {
            "code": 136,
            "refs": [
                0
            ],
            "name": "EXC_SMC",
            "recommended": true,
            "impdef": true,
            "type": "EXC",
            "description": "Exception taken locally, Secure Monitor Call"
        },
        {
            "code": 138,
            "refs": [
                0
            ],
            "name": "EXC_HVC",
            "recommended": true,
            "impdef": true,
            "type": "EXC",
            "description": "Exception taken locally, Hypervisor Call"
        },
        {
            "code": 139,
            "refs": [
                0
            ],
            "name": "EXC_TRAP_PABORT",
            "recommended": true,
            "impdef": true,
            "type": "EXC",
            "description": "Exception taken, Instruction Abort not taken locally"
        },
        {
            "code": 140,
            "refs": [
                0
            ],
            "name": "EXC_TRAP_DABORT",
            "recommended": true,
            "impdef": true,
            "type": "EXC",
            "description": "Exception taken, Data Abort or SError not taken locally"
        },
        {
            "code": 141,
            "refs": [
                0
            ],
            "name": "EXC_TRAP_OTHER",
            "recommended": true,
            "impdef": true,
            "type": "EXC",
            "description": "Exception taken, Other traps not taken locally"
        },
        {
            "code": 142,
            "refs": [
                0
            ],
            "name": "EXC_TRAP_IRQ",
            "recommended": true,
            "impdef": true,
            "type": "EXC",
            "description": "Exception taken, IRQ not taken locally"
        },
        {
            "code": 143,
            "refs": [
                0
            ],
            "name": "EXC_TRAP_FIQ",
            "recommended": true,
            "impdef": true,
            "type": "EXC",
            "description": "Exception taken, FIQ not taken locally"
        },
        {
            "code": 144,
            "refs": [
                0
            ],
            "name": "RC_LD_SPEC",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "description": "Release consistency operation speculatively executed, load-acquire"
        },
        {
            "code": 145,
            "refs": [
                0
            ],
            "name": "RC_ST_SPEC",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "description": "Release consistency operation speculatively executed, store-release"
        },
        {
            "code": 160,
            "refs": [
                0
            ],
            "trm_name": "L3_CACHE_RD",
            "name": "L3D_CACHE_RD",
            "recommended": true,
            "impdef": true,
            "architectural": false,
            "type": "UEVT",
            "subtype": "READ",
            "component": "L3",
            "description": "L3 cache read"
        },
        {
            "code": 16388,
            "refs": [
                0
            ],
            "name": "CNT_CYCLES",
            "architectural": false,
            "type": "CYCLE",
            "description": "Constant frequency cycles"
        },
        {
            "code": 16389,
            "refs": [
                0
            ],
            "name": "STALL_BACKEND_MEM",
            "architectural": false,
            "type": "CYCLE",
            "description": "No operation sent due to the backend and memory stalls"
        },
        {
            "code": 16390,
            "refs": [
                0
            ],
            "name": "L1I_CACHE_LMISS",
            "architectural": false,
            "type": "UEVT",
            "component": "L1I",
            "description": "L1 instruction cache long latency miss"
        },
        {
            "code": 16393,
            "refs": [
                0
            ],
            "name": "L2D_CACHE_LMISS_RD",
            "architectural": false,
            "type": "UEVT",
            "component": "L2",
            "description": "L2 cache long latency miss"
        },
        {
            "code": 16395,
            "refs": [
                0
            ],
            "name": "L3D_CACHE_LMISS_RD",
            "architectural": false,
            "type": "UEVT",
            "component": "L3",
            "description": "L3 cache long latency miss"
        },
        {
            "code": 16396,
            "refs": [
                0
            ],
            "name": "TRB_WRAP",
            "type": "UEVT",
            "description": "Trace buffer current write pointer wrapped"
        },
        {
            "code": 16400,
            "refs": [
                0
            ],
            "name": "TRCEXTOUT0",
            "type": "UEVT",
            "description": "PE Trace Unit external output 0"
        },
        {
            "code": 16401,
            "refs": [
                0
            ],
            "name": "TRCEXTOUT1",
            "type": "UEVT",
            "description": "PE Trace Unit external output 1"
        },
        {
            "code": 16402,
            "refs": [
                0
            ],
            "name": "TRCEXTOUT2",
            "type": "UEVT",
            "description": "PE Trace Unit external output 2"
        },
        {
            "code": 16403,
            "refs": [
                0
            ],
            "name": "TRCEXTOUT3",
            "type": "UEVT",
            "description": "PE Trace Unit external output 3"
        },
        {
            "code": 16408,
            "refs": [
                0
            ],
            "name": "CTI_TRIGOUT4",
            "type": "UEVT",
            "description": "Cross-trigger Interface output trigger 4"
        },
        {
            "code": 16409,
            "refs": [
                0
            ],
            "name": "CTI_TRIGOUT5",
            "type": "UEVT",
            "description": "Cross-trigger Interface output trigger 5"
        },
        {
            "code": 16410,
            "refs": [
                0
            ],
            "name": "CTI_TRIGOUT6",
            "type": "UEVT",
            "description": "Cross-trigger Interface output trigger 6"
        },
        {
            "code": 16411,
            "refs": [
                0
            ],
            "name": "CTI_TRIGOUT7",
            "type": "UEVT",
            "description": "Cross-trigger Interface output trigger 7"
        },
        {
            "code": 16416,
            "refs": [
                0
            ],
            "name": "LDST_ALIGN_LAT",
            "type": "UEVT",
            "description": "Access with additional latency from alignment"
        },
        {
            "code": 16417,
            "refs": [
                0
            ],
            "name": "LD_ALIGN_LAT",
            "type": "UEVT",
            "description": "Load with additional latency from alignment"
        },
        {
            "code": 16418,
            "refs": [
                0
            ],
            "name": "ST_ALIGN_LAT",
            "type": "UEVT",
            "description": "Store with additional latency from alignment"
        },
        {
            "code": 16420,
            "refs": [
                0
            ],
            "name": "MEM_ACCESS_CHECKED",
            "type": "UEVT",
            "description": "Checked data memory access"
        },
        {
            "code": 16421,
            "refs": [
                0
            ],
            "trm_name": "MEM_ACCESS_RD_CHECKED",
            "name": "MEM_ACCESS_CHECKED_RD",
            "type": "UEVT",
            "description": "Checked data memory access, read"
        },
        {
            "code": 16422,
            "refs": [
                0
            ],
            "trm_name": "MEM_ACCESS_WR_CHECKED",
            "name": "MEM_ACCESS_CHECKED_WR",
            "type": "UEVT",
            "description": "Checked data memory access, write"
        },
        {
            "code": 32773,
            "refs": [
                0
            ],
            "name": "ASE_INST_SPEC",
            "architectural": false,
            "type": "UEVT",
            "description": "Advanced SIMD operations speculatively executed"
        },
        {
            "code": 32774,
            "refs": [
                0
            ],
            "name": "SVE_INST_SPEC",
            "architectural": false,
            "type": "UEVT",
            "description": "SVE operations speculatively executed"
        },
        {
            "code": 32788,
            "refs": [
                0
            ],
            "name": "FP_HP_SPEC",
            "architectural": false,
            "type": "UEVT",
            "description": "Half-precision floating-point operation speculatively executed"
        },
        {
            "code": 32792,
            "refs": [
                0
            ],
            "name": "FP_SP_SPEC",
            "architectural": false,
            "type": "UEVT",
            "description": "Single-precision floating-point operation speculatively executed"
        },
        {
            "code": 32796,
            "refs": [
                0
            ],
            "name": "FP_DP_SPEC",
            "architectural": false,
            "type": "UEVT",
            "description": "Double-precision floating-point operation speculatively executed"
        },
        {
            "code": 32884,
            "refs": [
                0
            ],
            "name": "SVE_PRED_SPEC",
            "architectural": false,
            "type": "UEVT",
            "description": "SVE predicated operations speculatively executed"
        },
        {
            "code": 32885,
            "refs": [
                0
            ],
            "name": "SVE_PRED_EMPTY_SPEC",
            "architectural": false,
            "type": "UEVT",
            "description": "SVE predicated operations with no active predicates speculatively executed"
        },
        {
            "code": 32886,
            "refs": [
                0
            ],
            "name": "SVE_PRED_FULL_SPEC",
            "architectural": false,
            "type": "UEVT",
            "description": "SVE predicated operations speculatively executed with all active predicates"
        },
        {
            "code": 32887,
            "refs": [
                0
            ],
            "name": "SVE_PRED_PARTIAL_SPEC",
            "architectural": false,
            "type": "UEVT",
            "description": "SVE predicated operations speculatively executed with partially active predicates"
        },
        {
            "code": 32889,
            "refs": [
                0
            ],
            "name": "SVE_PRED_NOT_FULL_SPEC",
            "architectural": false,
            "type": "UEVT",
            "description": "SVE predicated operations speculatively executed with a Governing predicate in which at least one element is FALSE"
        },
        {
            "code": 32956,
            "refs": [
                0
            ],
            "name": "SVE_LDFF_SPEC",
            "architectural": false,
            "type": "UEVT",
            "description": "SVE First-fault load operations speculatively executed"
        },
        {
            "code": 32957,
            "refs": [
                0
            ],
            "name": "SVE_LDFF_FAULT_SPEC",
            "architectural": false,
            "type": "UEVT",
            "description": "SVE First-fault load operations speculatively executed which set FFR bit to 0"
        },
        {
            "code": 32960,
            "refs": [
                0
            ],
            "name": "FP_SCALE_OPS_SPEC",
            "architectural": false,
            "type": "UEVT",
            "description": "Scalable floating-point element operations speculatively executed"
        },
        {
            "code": 32961,
            "refs": [
                0
            ],
            "name": "FP_FIXED_OPS_SPEC",
            "architectural": false,
            "type": "UEVT",
            "description": "Non-scalable floating-point element operations speculatively executed"
        },
        {
            "code": 32995,
            "refs": [
                0
            ],
            "name": "ASE_SVE_INT8_SPEC",
            "type": "UEVT",
            "description": "Operation counted by ASE_SVE_INT_SPEC where the largest type is 8-bit integer"
        },
        {
            "code": 32999,
            "refs": [
                0
            ],
            "name": "ASE_SVE_INT16_SPEC",
            "type": "UEVT",
            "description": "Operation counted by ASE_SVE_INT_SPEC where the largest type is 16-bit integer"
        },
        {
            "code": 33003,
            "refs": [
                0
            ],
            "name": "ASE_SVE_INT32_SPEC",
            "type": "UEVT",
            "description": "Operation counted by ASE_SVE_INT_SPEC where the largest type is 32-bit integer"
        },
        {
            "code": 33007,
            "refs": [
                0
            ],
            "name": "ASE_SVE_INT64_SPEC",
            "type": "UEVT",
            "description": "Operation counted by ASE_SVE_INT_SPEC where the largest type is 64-bit integer"
        }
    ]
}